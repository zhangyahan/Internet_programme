osi七层
应用层: HTTP协议,向用户提供服务,
会话层: 一般都会和应用层合并
表示层: 一般都会和应用层合并
传输层: TCP/UDP网络套接字,进行应用端口之间的通信
网络层: arp协议,根据ip地址进行计算,如果ip地址不在一个
        局域网,则交给网关处理
数据链路层: 根据mac地址进行传输数据,以太网(internet)协议
物理层: 计算机硬件,根据电器的特性,通过网线进行电信号交流

C/S架构的软件(软件属于应用层)是基于网络进行通信的
网络的核心就是一堆协议

有人说socket说成ip+port
ip是用来表示互联网中的一台主机的位置
而port是用来标识这台机器上的一个应用程序
ip地址是配置在网卡生的,
而port是应用程序开启的
ip+port的绑定就标识了互联网中独一无二的一个应用程序

程序的pid是同一台机器上不同进程或者线程的标识

套接字最初是在一台机器上进行进程间通信的
IPC(进程间通信)

基于文件类型的套接字家族
套接字家族的名称:AF_UNIX

基于网络类型的套接字家族
套接字家族的名字:AF_INET

=====基于TCP服务器端的流程=====
1.socket()      # 创建套接字
2.bind()        # 绑定地址
3.listen()      # 设置监听套接字
4.accept()      # 等待客户端连接
5.read()/send() # 收发消息
6.close()       # 关闭连接当前套接字的客户端
7.close()       # 关闭服务器
===============================

=====基于TCP客户端的流程==================
1.socket()      # 创建套接字
2.connect()     # 发起连接
3.send()/read() # 收发消息
4.close()       # 关闭客户端与服务器的连接
===========================================


blacklog: 半连接,当第三次握手没有连接,都称为半连接状态
          半连接池,来一个请求进入到blacklog,
          从blacklog池中取连接
          在listen()步骤进行限制

TCP在建立连接和断开连接时称为三次握手和四次挥手
三次握手
第一次握手: Client --> Server 客户端连接服务器
第二次握手: Client <-- Server 服务器连接客户端,并进行确认
第三次握手: Client --> Server 完成连接

数据传输

四次挥手

为什么建立连接需要三次断开需要四次




